rules_version = '2';

service cloud.firestore {
  function isSignedIn() {
    return request.auth != null;
  }

  function isAdmin() {
    return isSignedIn() && request.auth.token.admin == true;
  }

  function isOwner(uid) {
    return isSignedIn() && request.auth.uid == uid;
  }

  function emailMatches(value) {
    return isSignedIn() && value is string && lower(value) == lower(request.auth.token.email);
  }

  function emailMatchesUser(username) {
    return username is string &&
      exists(/databases/$(db)/documents/users/$(username)) &&
      emailMatches(get(/databases/$(db)/documents/users/$(username)).data.email);
  }

  match /databases/{db}/documents {
    match /tariffs/{id} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    match /messageOffers/{id} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    match /leads/{id} {
      allow read: if isAdmin();
      allow create: if true;
      allow update, delete: if isAdmin();
    }

    match /users/{uid} {
      allow read: if isAdmin() || (resource.data.email is string && emailMatches(resource.data.email));
      allow create: if emailMatches(request.resource.data.email);
      allow update: if isAdmin() || (resource.data.email is string && emailMatches(resource.data.email) && emailMatches(request.resource.data.email));
      allow delete: if isAdmin() || (resource.data.email is string && emailMatches(resource.data.email));
    }

    match /rewards/{id} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    match /callRequests/{id} {
      allow read: if isAdmin() ||
        (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
        (resource.data.originUser is string && emailMatchesUser(resource.data.originUser));
      allow create: if true;
      allow update: if isAdmin() || (
        (
          (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
          (resource.data.originUser is string && emailMatchesUser(resource.data.originUser))
        ) && (
          (request.resource.data.ownerEmail is string && emailMatches(request.resource.data.ownerEmail)) ||
          (request.resource.data.originUser is string && emailMatchesUser(request.resource.data.originUser))
        )
      );
      allow delete: if isAdmin();
    }

    match /banner/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /analyticsEvents/{id} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    match /disasterRecovery/{doc=**} {
      allow read, write: if isAdmin();
    }

    match /app/{docId} {
      allow read, write: if isAdmin();
    }

    match /customBudgets/{id} {
      allow read: if isAdmin() ||
        (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
        (resource.data.createdBy is string && emailMatchesUser(resource.data.createdBy));
      allow create: if isAdmin() || (
        (request.resource.data.ownerEmail is string && emailMatches(request.resource.data.ownerEmail)) ||
        (request.resource.data.createdBy is string && emailMatchesUser(request.resource.data.createdBy))
      );
      allow update: if isAdmin() || (
        (
          (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
          (resource.data.createdBy is string && emailMatchesUser(resource.data.createdBy))
        ) && (
          (request.resource.data.ownerEmail is string && emailMatches(request.resource.data.ownerEmail)) ||
          (request.resource.data.createdBy is string && emailMatchesUser(request.resource.data.createdBy))
        )
      );
      allow delete: if isAdmin() ||
        (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
        (resource.data.createdBy is string && emailMatchesUser(resource.data.createdBy));
    }

    match /messageThreads/{id} {
      allow read: if isAdmin() ||
        (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
        (resource.data.user is string && emailMatchesUser(resource.data.user));
      allow create: if isSignedIn() && (
        (request.resource.data.ownerEmail is string && emailMatches(request.resource.data.ownerEmail)) ||
        (request.resource.data.user is string && emailMatchesUser(request.resource.data.user))
      );
      allow update, delete: if isAdmin() || (
        (
          (resource.data.ownerEmail is string && emailMatches(resource.data.ownerEmail)) ||
          (resource.data.user is string && emailMatchesUser(resource.data.user))
        ) && (
          (request.resource.data.ownerEmail is string && emailMatches(request.resource.data.ownerEmail)) ||
          (request.resource.data.user is string && emailMatchesUser(request.resource.data.user))
        )
      );
    }

    match /notifications/{id} {
      allow read: if isAdmin() ||
        resource.data.target == 'all' ||
        (isSignedIn() && resource.data.target == request.auth.uid) ||
        (resource.data.userEmail is string && emailMatches(resource.data.userEmail)) ||
        (resource.data.user is string && emailMatchesUser(resource.data.user));
      allow create: if isAdmin();
      allow update: if isAdmin() || (
        (
          (resource.data.userEmail is string && emailMatches(resource.data.userEmail)) ||
          (resource.data.user is string && emailMatchesUser(resource.data.user))
        ) && (
          (request.resource.data.userEmail is string && emailMatches(request.resource.data.userEmail)) ||
          (request.resource.data.user is string && emailMatchesUser(request.resource.data.user))
        )
      );
      allow delete: if isAdmin();
    }
  }
}
